#+INCLUDE: "macros.org"
#+TITLE: {{{SITETITLE}}}
{{{NAVBAR}}}
{{{PAGETITLE(Programming)}}}
* Python
I am an avid user and fan of the [[https://www.python.org/][Python]] programming language, which is modern,
powerful, open-source, object-oriented, well-documented, and with elegant
syntax.  I use the [[http://ipython.org/][IPython]] environment and rely on the [[http://xarray.pydata.org][xarray]], [[http://www.numpy.org/][NumPy]], [[http://scipy.org/][SciPy]],
[[http://matplotlib.org/][matplotlib]], and [[http://netcdf4-python.googlecode.com/svn/trunk/docs/netCDF4-module.html][netcdf4-python]] modules modules to analyze climate model data via
the free [[https://store.continuum.io/cshop/anaconda/][Anaconda]] distribution.
** Python packages I have created
*** =aospy=
My colleagues and I often lament how much time we spend messing with computer
code in order to output data or figures.  Also, lacking sufficient metadata to
describe what they actually do/are, scripts/plots quickly become outdated and
untrustworthy (e. g. "Did I remember to change the output variable in the script
when I made this plot?").  In addition, creating plots one by one can be
impractical when dozens of plots are needed (e.g. DJF, JJA, SON, MAM, and annual
mean plots of multiple variables from multiple experimental runs and/or multiple
models and/or multiple ensemble members).

This frustrating inefficiency has led me to create a Python module that automates
these tasks. Dubbed "aospy", it's aim is to, given some dataset, perform all
frequently used calculations, create plots, and store all results and metadata
conveniently.  And do this all with minimal input by the user.

The source code for aospy is available on [[https://github.com/spencerahill][my Github]].  However, it is quite a
mess in its current state and very poorly documented.  I am working with Spencer
Clark of Princeton AOS to clean it up and create a proper v0.1 release
(someday...).
*** Others (available on [[https://github.com/spencerahill][my Github]])
| [[https://github.com/spencerahill/infinite-diff][infinite-diff]] | Xarray-based finite differencing package                                 |
| [[https://github.com/spencerahill/animal-spharm][animal-spharm]] | Xarray-based wrapper around existing Python spherical harmonics packages |
| [[https://github.com/spencerahill/aospy-obj-lib][aospy-obj-lib]] | The collection of =aospy= objects I use in my own research                 |
** Python packages I use
| [[http://xarray.pydata.org][xarray]]         | "N-D labeled arrays and datasets in Python"                              |
| [[http://pandas.pydata.org/index.html][pandas]]         | "Easy-to-use data structures and data analysis tools"                    |
| [[http://www.numpy.org/][NumPy]]          | N-dimensional arrays.                                                    |
| [[http://scipy.org/][SciPy]]          | Extensive library for scientific computations                            |
| [[http://netcdf4-python.googlecode.com/svn/trunk/docs/netCDF4-module.html][netcdf4-python]] | Interface for netCDF files                                               |
| [[http://matplotlib.org/][matplotlib]]     | Plotting library that mimics MATLAB's commands                           |
| [[http://matplotlib.org/basemap/][Basemap]]        | For plotting maps (part of Matplotlib)                                   |
| [[https://code.google.com/p/pyspharm/][pyspharm]]       | Python interface to SPHEREPACK library for spherical harmonic transforms |
| [[http://ajdawson.github.io/windspharm/index.html][windspharm]]     | Wrapper for pyspharm                                                     |
| [[https://pypi.python.org/pypi/colorama][colorama]]       | Colorize text outputted to terminal                                      |
** Python packages I haven't tried but look cool
| [[http://dask.pydata.org/en/latest/][Dask]]          | Parallel computing and memory chunking                                                    |
| [[https://github.com/brian-rose/climlab][climlab]]       | "Python package for process-oriented climate modeling"                                    |
| [[http://xgcm.readthedocs.org/en/latest/][xgcm]]          | "General Circulation Model Postprocessing with xarray"                                    |
| [[http://matplotlib.org/cmocean/][cmocean]]       | "Beautiful colormaps for oceanography" (for matplotlib)                                   |
| [[http://mpld3.github.io/index.html][mpld3]]         | "Bringing matplotlib to the browser"                                                      |
| [[http://www.clawpack.org/][Clawpack]]      | Finite volume methods for systems of conservation laws                                    |
| [[http://pint.readthedocs.org/en/0.6/][Pint]]          | Keep track of physical units in computations                                              |
| [[https://astropy.readthedocs.org/en/latest/units/index.html][astropy.units]] | Keep track of physical units in computations                                              |
| [[http://stanford.edu/~mwaskom/software/seaborn/][Seaborn]]       | Visualization library with emphasis on statistical data                                   |
| [[http://scitools.org.uk/iris/][Iris]]          | "A Python library for meteorology and climatology"                                        |
| [[http://scitools.org.uk/cartopy/docs/latest/index.html][cartopy]]       | An alternative library to Basemap for plotting maps                                       |
| [[http://ioam.github.io/holoviews/index.html][HoloViews]]     | "Composable, declarative data structures for building even complex visualizations easily" |
| [[http://ajdawson.github.io/eofs/][eofs]]          | Empirical Orthogonal Function analysis                                                    |
| [[http://pynco.readthedocs.org/en/latest/][pynco]]         | Python wrapper for NCO command-line tools for netCDF data                                 |
| [[http://www.blogofile.com/][Blogofile]]     | Python-based engine for blogging (if/when I ever started a blog)                          |
** Python environments and package managers
| [[https://www.python.org/][Python]]           | The official, bread-and-butter Python                  |
| [[http://ipython.org/index.html][IPython]]          | "Interactive Python": more IDE-like Python environment |
| [[http://ipython.org/notebook.html][IPython Notebook]] | Amazing web-based interface for IPython                |
| [[https://store.continuum.io/cshop/anaconda/][Anaconda]]         | Great, free package manager                            |
| [[https://www.enthought.com/products/canopy/][Canopy]]           | Another package manager; free for academic use         |
** Other Python resources
| [[https://talkpython.fm/][Talk Python To Me]] | Great weekly podcast on Python                              |
| [[https://pyformat.info/][PyFormat]]          | Simple, clear guide to understanding string formatting      |
| [[http://pydata.org/][PyData]]            | "A community for developers and users of Python data tools" |
| [[http://earthpy.org/][EarthPy]]           | Misc. examples of python applications in earth sciences     |
* Emacs Org-Mode
[[https://www.gnu.org/software/emacs/emacs.html][Emacs]] is a powerful text editor that I use for as many tasks as I can.  [[http://orgmode.org/][Org-mode]]
is an extension of Emacs for creating outline-like documents, with many powerful
tools for embedding to-do lists, links, code, and images and for converting the
files to LaTeX, HTML, and other formats.

This integration of elements typically found in scientific manuscripts makes
Org-mode a potentially useful vehicle for [[http://reproducibleresearch.net/][reproducible research]] -- try Googling
"org mode reproducible research" or checkout this [[https://www.youtube.com/watch?v=1-dUkyn_fZA&list=FLQp2VLAOlvq142YN3JO3y8w][YouTube video]] by John Kitchin,
a chemical engineering professor at Carnegie Mellon.  He also has a nice [[http://kitchingroup.cheme.cmu.edu/blog/2014/08/08/What-we-are-using-org-mode-for/][page]]
highlighting the powers of Org-mode in reproducible research and beyond.

In fact, my website and CV are written entirely as org-mode files, which I then
publish to HTML (and PDF for the CV) using Org-Mode's Publish functionality.  I
intend to publish these source files on Github eventually as an example of how
Org-mode can be used.
* Others
| [[http://nco.sourceforge.net/][netCDF Operator (NCO) toolkit]] | Library of command-line tools for interacting with netCDF data |
